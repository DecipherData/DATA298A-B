# -*- coding: utf-8 -*-
"""yolov8s.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Nb7EKaNkWvyjlnsIVF1a31hZYIgEtcoj
"""

!nvidia-smi

import os
HOME = os.getcwd()
print(HOME)

!pip install ultralytics

import ultralytics

import glob
from IPython.display import Image, display

ultralytics.checks()

from google.colab import drive
drive.mount('/content/drive')

from ultralytics import YOLO

!ls  '/content/drive/MyDrive/Data298AandB/Grounding_DINO/YOLO_Classification'

import shutil
#shutil.rmtree('/content/drive/MyDrive/Data298AandB/Grounding_DINO/YOLO_Classification/data/runs', ignore_errors=True)

!ls  '/content/drive/MyDrive/Data298AandB/Grounding_DINO/YOLO_Classification/data'

#Already unzipped
#!unzip -u '/content/gdrive/MyDrive/Data298AandB/data/train_val_test.zip' -d '/content/gdrive/MyDrive/Data298AandB/data'

DATA_DIR= '/content/drive/MyDrive/Data298AandB/Grounding_DINO/YOLO_Classification/data'
DATA_DIR

!ls '/content/drive/MyDrive/Data298AandB/Grounding_DINO/YOLO_Classification/data'

DATA_DIR

os.getcwd()

os.chdir('/content/drive/MyDrive/Data298AandB/Grounding_DINO/YOLO_Classification/data')
os.getcwd()

!pip install tensorboard

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard

# Commented out IPython magic to ensure Python compatibility.
# %tensorboard --logdir /content/drive/MyDrive/Data298AandB/Grounding_DINO/YOLO_Classification/data/runs/classify/train2

#!yolo task=classify mode=train model=yolov8m-cls.pt data='{DATA_DIR}' epochs=10 imgsz=416
!yolo task=classify mode=train data='{DATA_DIR}' model=yolov8s-cls.pt epochs=100 imgsz=640

{DATA_DIR}

!ls  '{DATA_DIR}/runs/classify/train2'

!ls  '{DATA_DIR}/runs/classify/train2/weights'

{DATA_DIR}

!yolo task=classify mode=val data='{DATA_DIR}' model={DATA_DIR}/runs/classify/train2/weights/last.pt

Image(filename=f'{DATA_DIR}/runs/classify/val3/confusion_matrix.png')

Image(filename=f'{DATA_DIR}/runs/classify/val3/confusion_matrix_normalized.png')

Image(filename=f'{DATA_DIR}/runs/classify/train2/results.png')

Image(filename=f'{DATA_DIR}/runs/classify/train2/train_batch0.jpg')

Image(filename=f'{DATA_DIR}/runs/classify/train2/train_batch1.jpg')

Image(filename=f'{DATA_DIR}/runs/classify/train2/train_batch2.jpg')

Image(filename=f'{DATA_DIR}/runs/classify/train2/val_batch0_labels.jpg')

Image(filename=f'{DATA_DIR}/runs/classify/train2/val_batch0_pred.jpg')

Image(filename=f'{DATA_DIR}/runs/classify/val3/val_batch2_labels.jpg')

Image(filename=f'{DATA_DIR}/runs/classify/val3/val_batch2_pred.jpg')

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
#!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/furniture'

model = YOLO('/content/drive/MyDrive/Data298AandB/Grounding_DINO/YOLO_Classification/data/runs/classify/train2/weights/best.pt')

from sklearn.metrics import classification_report
from pathlib import Path

# Assuming you have a base path where all class folders are located
base_path = Path('/content/drive/MyDrive/Data298AandB/Grounding_DINO/YOLO_Classification/data/test')

# List of all class folder names (you can also dynamically list them using base_path.glob('*'))
class_folders = ['biowaste', 'cardboard', 'clothes', 'e-waste', 'furniture', 'glass', 'medical', 'metal', 'paper', 'plastic', 'shoes']

# Initialize lists to store true and predicted labels
true_labels = []
predicted_labels = []

# Loop through each class folder and make predictions on each image
for class_folder in class_folders:
  #print('class folder => :', class_folder)

  folder_path = base_path / class_folder
  #print('folder path =>', folder_path)
  # Make predictions on the current folder
  results = model(source=str(folder_path), conf=0.25)

  # Process each result
  for result in results:
    # Get the ground truth from the folder name
    true_labels.append(class_folder)

        # Get the predicted class name using the top1 index
    predicted_class_name = result.names[result.probs.top1]
    print('predicted_class_name =>', predicted_class_name)
    predicted_labels.append(predicted_class_name)

# Now that we have all the true labels and predicted labels, we can calculate the classification report
report = classification_report(true_labels, predicted_labels, target_names=class_folders)
print(report)

!ls '{HOME}/runs/classify/predict'

#from ultralytics.models.rtdetr import predict
import glob
from IPython.display import Image,display

for image_path in glob.glob(f'{HOME}/runs/classify/predict/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/plastic'

#from ultralytics.models.rtdetr import predict
import glob
from IPython.display import Image,display

for image_path in glob.glob(f'{HOME}/runs/classify/predict2/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/biowaste'

#from ultralytics.models.rtdetr import predict
import glob
from IPython.display import Image,display

for image_path in glob.glob(f'{HOME}/runs/classify/predict3/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/glass'

#from ultralytics.models.rtdetr import predict
import glob
from IPython.display import Image,display

for image_path in glob.glob(f'{HOME}/runs/classify/predict4/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/clothes'

for image_path in glob.glob(f'{HOME}/runs/classify/predict5/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/shoes'

for image_path in glob.glob(f'{HOME}/runs/classify/predict6/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/medical'

for image_path in glob.glob(f'{HOME}/runs/classify/predict7/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/e-waste'

for image_path in glob.glob(f'{HOME}/runs/classify/predict8/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/cardboard'

for image_path in glob.glob(f'{HOME}/runs/classify/predict9/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/paper'

for image_path in glob.glob(f'{HOME}/runs/classify/predict10/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')

!yolo task=classify mode=predict model={HOME}/drive/MyDrive/Data298AandB/data/train_val_test/runs/classify/train/weights/last.pt conf=0.25 source='{HOME}/drive/MyDrive/Data298AandB/data/train_val_test/test/metal'

for image_path in glob.glob(f'{HOME}/runs/classify/predict11/*.jpg')[:10]:
  print(image_path)
  display(Image(filename=image_path, height = 416))
  print('\n')